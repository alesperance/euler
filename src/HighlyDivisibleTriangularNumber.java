/*
 * Written By: A. L'Esperance
 * 
 * What is the value of the first triangle number to have over
 * five hundred divisors?
 */
public class HighlyDivisibleTriangularNumber 
{

	public static void main(String[] args) 
	{
		long start = System.currentTimeMillis();
		
		int triangleNumber = 0;
		int numDivisors = 0;
		for(int i = 1; i < Integer.MAX_VALUE; i++)
		{
			triangleNumber = GetTriangleNumber(i);
			numDivisors = GetDivisors(triangleNumber);
			if(numDivisors > 500)
				break;
		}
		long end = System.currentTimeMillis();
		System.out.println(triangleNumber);
		System.out.println(end - start + "ms");
	}
	
	/*
	 * Calculate the Triangle Number.  A Triangle number
	 * is generated by adding the natural numbers.
	 * For example, the 7th triangle number would be 
	 * 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28
	 * 
	 * @param num - The number we are getting the triangle
	 * 				number from
	 * @returnThe triangle number
	 */
	static int GetTriangleNumber(int num)
	{
		int triangleNumber = 0;
		
		//While the number we passed in isn't 0, we'll
		//add the value to the triangle number and decrement
		//the value of num by 1.
		while(num != 0)
		{
			triangleNumber += num--;
		}
		return triangleNumber;
	}
	
	
	static int GetDivisors(int num)
	{
		//Initially 2 because we are writing 1 and the number 
		//itself as a divisor
		int numDivisors = 2;
		
		//We calculate the length because besides the number itself,
		//The 2nd largest divisor we can expect is half of the number
		int length = num/2;
		for(int i = 1; i <= length; i++)
		{
			if(num % i == 0)
				numDivisors++;
			if(numDivisors > 500)
				break;
		}
		return numDivisors;
	}

}
